/*!
* Sprites.js
* handles drawing of sprites
* for now also Hardwired setting of sprites in this.maps
*/

'use strict';


(function (){

function Sprites()
{
	this.maps={};
}
Sprites.prototype.totalFrames=function(map,anim)
{
	if(typeof(this.maps[map].ss[anim])!="undefined")
	return this.maps[map].ss[anim].length;
	else
	{
		console.log(anim+" not a valid anim for "+map+" avalaiable anims are: ");
		for(var all in this.maps[map].ss) console.log(all);
		return 1;
	}
}
Sprites.prototype.width=function(map,anim,f)
{
//	console.log(map+" anim: "+anim+" frame "+f);
	if(typeof(this.maps[map])!="undefined")
	{
		return this.maps[map].ss[anim][f][2];
	}else
	{
		console.log(map+" not a valid sprite avalaiable sprites are: ");
		for(var all in this.maps) console.log(all);
		return 0;
	}
}
Sprites.prototype.height=function(map,anim,f)
{
//	console.log(map+" anim: "+anim+" frame "+f);
	if(typeof(this.maps[map])!="undefined")
	{
		return this.maps[map].ss[anim][f][3];
	}else
	{
		console.log(map+" not a valid sprite avalaiable sprites are: ");
		for(var all in this.maps) console.log(all);
		return 0;
	}
}
Sprites.prototype.getFontMap=function(map,anim)
{
	if(typeof(this.maps[map])=="undefined") return null;
	if(typeof(this.maps[map].map)=="undefined") return null;
	return this.maps[map].map;
}
Sprites.prototype.getFrame=function(map,anim,f)
{
	if(typeof(this.maps[map])=="undefined") return null;
	if(typeof(this.maps[map].ss)=="undefined") return null;
	if(typeof(this.maps[map].ss[anim])=="undefined") return null;
	if(typeof(this.maps[map].ss[anim][f])=="undefined") return null;
	return this.maps[map].ss[anim][f];
}
Sprites.prototype.getNames=function()
{
	var names=[];
	for(var all in this.maps)
	{
		names.push(all);
	}
	return names;	
}
Sprites.prototype.getAnims=function(map)
{
	if(typeof(this.maps[map].ss)!="undefined")
	{
		var anims=[];
		for(all in this.maps[map].ss)
		{
			anims.push(all);
		}
		return anims;
	}else
	{
		console.log(anim+" not a valid spritename "+map+" available sprites are: ");
		for(var all in this.maps) console.log(all);
		return 0;
	}	
}
Sprites.prototype.initMaps=function()
{
	var o={},a;
	for(var all in this.maps)
	{
		if(typeof(this.maps[all].lib_name)!="undefined")
		{
//			console.log(all+"="+this.maps[all].lib_name.constructor.toString().indexOf("Array")!=-1);
			if(this.maps[all].lib_name.constructor.toString().indexOf("Array")==-1)
			{
				var img=MG.lib.images[this.maps[all].lib_name];
				if(typeof(img)==="undefined")
				{
					console.log("WARNING: invalid image in lib_name (string) "+JSON.stringify(this.maps[all]));
				}
				this.maps[all].img=[img]; // make it an array of 1 resolved image.
				console.log("WARINING: "+all+" sprite definition with string lib_name in stead of array! "+JSON.stringify(this.maps[all]));
				
			}else
			{
				// resolve the array one by one.
				this.maps[all].img=[];
				for(var i=0;i<this.maps[all].lib_name.length;i++)
				{
					var img=MG.lib.images[ this.maps[all].lib_name[i] ];
					if(typeof(img)==="undefined")
					{
						console.log("WARNING invalid image in lib_name (Array, index:"+i+") "+JSON.stringify(this.maps[all]));
					}
					this.maps[all].img.push(img);
				}
				// it's an array of image references now.., yeah
			}
				
		}
	}
	
	/*
	
	// maps generated by sprit-o-tron
// add this spritemap in sprites.js
this.maps['explo']={img:MG.lib.images["explo_spritesheet"],w:51,h:51,kind:"sprite",ss:{}};
this.maps['explo'].ss['explo']=[[1,1,51,51,0,26,26],[53,1,51,51,0,26,26],[105,1,51,51,0,26,26],[157,1,51,51,0,26,26],[209,1,51,51,0,26,26],[261,173,51,51,0,26,26],[313,173,51,51,0,26,26],[365,173,51,51,0,26,26]]

// add this spritemap in sprites.js
this.maps['tiles_stand']={img:MG.lib.images["tiles_stand_spritesheet"],w:12,h:12,kind:"sprite",ss:{}};
this.maps['tiles_stand'].ss['tiles_stand']=[[1,0,12,36,0,6,18],[14,0,12,36,0,6,18],[27,0,12,36,0,6,18],[40,0,12,36,0,6,18],[53,0,12,36,0,6,18]]
// add this spritemap in sprites.js
this.maps['tiles_flat']={img:MG.lib.images["tiles_flat_spritesheet"],w:36,h:36,kind:"sprite",ss:{}};
this.maps['tiles_flat'].ss['tiles_flat']=[[1,0,36,12,0,18,6],[38,0,36,12,0,18,6],[75,0,36,12,0,18,6],[112,0,36,12,0,18,6],[149,0,36,12,0,18,6]]



// add this spritemap in sprites.js
this.maps['ship_blue']={img:MG.lib.images["ship_blue_spritesheet"],w:24,h:24,kind:"sprite",ss:{}};
this.maps['ship_blue'].ss['ship_blue']=[[1,1,24,21,0,12,7],[26,1,24,21,0,12,7],[51,1,24,21,0,12,7],[76,1,24,21,0,12,7],[101,1,24,21,0,12,7],[126,1,24,21,0,12,7],[151,1,24,21,0,12,7],[176,1,24,21,0,12,7],[201,1,24,21,0,12,7],[226,1,24,21,0,12,7],[251,1,24,21,0,12,7],[276,1,24,21,0,12,7],[301,1,24,21,0,12,7],[326,1,24,21,0,12,7],[351,1,24,21,0,12,7],[376,1,24,21,0,12,7],[401,1,24,21,0,12,7]]

// add this spritemap in sprites.js
this.maps['ship_player2']={img:MG.lib.images["ship_player2_spritesheet"],w:24,h:24,kind:"sprite",ss:{}};
this.maps['ship_player2'].ss['ship_player2']=[[1,1,24,21,0,12,8],[26,1,24,21,0,12,8],[51,1,24,21,0,12,8],[76,1,24,21,0,12,8],[101,1,24,21,0,12,8],[126,1,24,21,0,12,8],[151,1,24,21,0,12,8],[176,1,24,21,0,12,8],[201,1,24,21,0,12,8],[226,1,24,21,0,12,8],[251,1,24,21,0,12,8],[276,1,24,21,0,12,8],[301,1,24,21,0,12,8],[326,1,24,21,0,12,8],[351,1,24,21,0,12,8],[376,1,24,21,0,12,8],[401,1,24,21,0,12,8]]



// add this spritemap in sprites.js
this.maps['cow']={img:MG.lib.images["cow_spritesheet"],w:17,h:17,kind:"sprite",ss:{}};
this.maps['cow'].ss['stand']=[[1,0,17,13,0,6,12]];
this.maps['cow'].ss['eat']=[[1,0,17,13,0,6,12],[19,0,17,13,0,6,12],[37,0,17,13,0,6,12],[55,0,17,13,0,6,12],[55,0,17,13,0,6,12],[55,0,17,13,0,6,12],[37,0,17,13,0,6,12],[19,0,17,13,0,6,12]];
this.maps['cow'].ss['walk']=[[73,0,17,13,0,6,12],[91,0,17,13,0,6,12],[109,0,17,13,0,6,12],[127,0,17,13,0,6,12]];
this.maps['cow'].ss['panic']=[[73,0,17,13,0,6,12],[91,0,17,13,0,6,12],[109,0,17,13,0,6,12],[127,0,17,13,0,6,12]];
this.maps['cow'].ss['float']=[[73,0,17,13,0,6,12]];
*/
};
Sprites.prototype.add=function(name,data)
{
	this.maps[name]=data;
}
Sprites.prototype.draw=function(ctx,map,anim,x,y,f,r,sx,sy)
{
   if(r===undefined) r=0;
   if(sx===undefined) sx=1;
   if(sy===undefined) sy=sx;
   if(f===undefined) f=0;
   if(x===undefined) x=0;
   if(y===undefined) y=0;
   var bw,bh;
   var px,py;
   var rx,ry;
   var image;
   if(anim===undefined)
   {
		console.log("WARNING: drawBitmapSprite: '"+map+"' no anim given");
		return;
   }
   if(typeof(this.maps[map])==="undefined")
   {
		console.log("WARNING: '"+map+"' not in MG.sprites");
		return;
   }
   if(!this.maps[map].kind=="sprite")
   {
		console.log("WARNING: "+map+" not a sprite");
		return;
   }else
   {
    // get the numbers from the graphics_manifest and ss data for the sprite!!
	if(typeof(this.maps[map].ss[anim])==="undefined")
	{
		console.log("WARNING: anim "+anim+" not a known frame for sprite "+map);
		return;
	}
	if(typeof(this.maps[map].ss[anim][f])==="undefined")
	{
		console.log("WARNING: frame "+f+" not a known frame for sprite "+map+","+anim);
		return;
	}
    px=this.maps[map].ss[anim][f][0];
    py=this.maps[map].ss[anim][f][1];
    bw=this.maps[map].ss[anim][f][2];
    bh=this.maps[map].ss[anim][f][3];
	// 4 is in easel.js a listing of the sheet!
	if(typeof(this.maps[map].ss[anim][f][5])!=="undefined")
	    rx=this.maps[map].ss[anim][f][5];
	else 
	    rx=bw/2;
	if(typeof(this.maps[map].ss[anim][f][6])!=="undefined")
	    ry=this.maps[map].ss[anim][f][6];
	else 
	    ry=bh/2;
		image=this.maps[map].img[this.maps[map].ss[anim][f][4]]; 
   }
   
   ctx.save(); 
   ctx.translate(x, y);
   ctx.scale(sx, sy);
   ctx.rotate(r);
   if(typeof(image)!="undefined")
   {
	ctx.drawImage(image, px,py,bw,bh,-rx,-ry,bw,bh);   
   }else{
	   console.log("No image defined for: "+map);
	   console.log("No image defined for: "+anim);
	   console.log("No image defined for: "+f);
   }
   ctx.restore(); 
};
MG.sprites=new Sprites();

})();

